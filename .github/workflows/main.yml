name: 打包多架构Python程序

on:
  push:
    branches: [ main ]  # 触发条件：main分支有推送时运行
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        # 定义两个运行环境：Intel（macos-13）和M芯片（macos-14）
        os: [macos-13, macos-14]
        python-version: ["3.11"]  # 指定Python版本

    runs-on: ${{ matrix.os }}  # 基于矩阵参数选择运行环境

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 安装项目依赖
          pip install pyinstaller  # 安装PyInstaller

      - name: 打包程序
        run: |
          # 根据运行环境定义输出文件名（区分架构）
          if [ "${{ matrix.os }}" = "macos-13" ]; then
            ARCH="intel"
          else
            ARCH="m_chip"
          fi
          pyinstaller --onefile --name "your_app_${ARCH}" your_script.py  # 替换为你的脚本名

      - name: 上传打包产物
        uses: actions/upload-artifact@v4
        with:
          name: your_app_${{ matrix.os }}
          path: dist/  # 上传dist目录下的可执行文件
